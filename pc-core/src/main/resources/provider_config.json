{
  "config": "{\n\t\"secretKey\":\"f7d9458d592713b8cff52a3cd9939fcb\"\n}",
  "description": "聚合短信",
  "providerName": "聚合",
  "scriptContext": "import com.alibaba.fastjson.JSONObject;\nimport com.zte.msg.pushcenter.pcscript.PcScript;\n\nimport java.util.Map;\n\n\npublic class JuheSmsDemo implements PcScript {\n    public static final String DEF_CHATSET = \"UTF-8\";\n    public static final int DEF_CONN_TIMEOUT = 30000;\n    public static final int DEF_READ_TIMEOUT = 30000;\n    public static String userAgent = \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.66 Safari/537.36\";\n\n    @Override\n    public Res execute(Map<String, Object> params) {\n        System.out.println(\"phoneNum :\" + params.get(\"phoneNum\") + \"; templateId: \" + params.get(\"templateId\") + \"; params size: \" + params.size());\n        StringBuilder var = new StringBuilder();\n        Map<String, String> vars = (Map<String, String>) params.get(\"vars\");\n        vars.forEach((k, v) -> var.append(\"#\").append(k).append(\"#\").append(\"=\").append(v).append(\"&\"));\n        String url = \"http://v.juhe.cn/sms/send?\";\n        StringBuilder url1 = new StringBuilder(url);\n        url1.append(\"mobile\").append(\"=\").append(params.get(\"phoneNum\"))\n                .append(\"&\").append(\"tpl_id\").append(\"=\").append(params.get(\"sTemplateId\"))\n                .append(\"&\").append(\"tpl_value\").append(\"=\").append(var.toString())\n                .append(\"&\").append(\"key\").append(\"=\").append(params.get(\"secretKey\"));\n\n        return parseResponse(net(url1.toString(), \"GET\"));\n    }\n\n    /**\n     * @param strUrl 请求地址\n     * @param method 请求方法\n     * @return 网络请求字符串\n     * @throws Exception\n     */\n    public static String net(String strUrl, String method) {\n//        HttpURLConnection conn = null;\n//        BufferedReader reader = null;\n//        String rs = null;\n//        StringBuilder sb = new StringBuilder();\n//        try {\n//            strUrl = strUrl.replaceAll(\"#\", URLEncoder.encode(\"#\", \"UTF-8\"));\n//            System.out.println(strUrl);\n//            URL url = new URL(strUrl);\n//            conn = (HttpURLConnection) url.openConnection();\n//            conn.setRequestMethod(method);\n//            conn.setRequestProperty(\"User-agent\", userAgent);\n//            conn.setUseCaches(false);\n//            conn.setConnectTimeout(DEF_CONN_TIMEOUT);\n//            conn.setReadTimeout(DEF_READ_TIMEOUT);\n//            conn.setInstanceFollowRedirects(false);\n//            conn.connect();\n//            InputStream is = conn.getInputStream();\n//            reader = new BufferedReader(new InputStreamReader(is, DEF_CHATSET));\n//            String strRead = null;\n//            while ((strRead = reader.readLine()) != null) {\n//                sb.append(strRead);\n//            }\n//            rs = sb.toString();\n//            reader.close();\n//        } catch (IOException e) {\n//            e.printStackTrace();\n//        } finally {\n//            if (conn != null) {\n//                conn.disconnect();\n//            }\n//        }\n\n//        return rs;\n        return \"{\\n\" +\n                \"        \\t\\\"reason\\\":\\\"操作成功\\\",\\n\" +\n                \"        \\t\\\"result\\\":{\\n\" +\n                \"        \\t\\t\\\"sid\\\":\\\"1428ADC382FEDE59\\\",\\n\" +\n                \"        \\t\\t\\\"fee\\\":1,\\n\" +\n                \"        \\t\\t\\\"count\\\":1\\n\" +\n                \"        \\t},\\n\" +\n                \"        \\t\\\"error_code\\\":0\\n\" +\n                \"        }\";\n\n    }\n\n\n    private Res parseResponse(String res) {\n//        {\n//        \t\"reason\":\"操作成功\",\n//        \t\"result\":{\n//        \t\t\"sid\":\"1428ADC382FEDE59\",\n//        \t\t\"fee\":1,\n//        \t\t\"count\":1\n//        \t},\n//        \t\"error_code\":0\n//        }\n        JSONObject resObj = JSONObject.parseObject(res);\n        ErrorCodes errorCode = ErrorCodes.find(resObj.getString(\"error_code\"));\n\n        return new Res(errorCode.getPcCode(), resObj.getString(\"reason\"));\n    }\n\n    public enum ErrorCodes {\n\n        ERROR_PHONE_NUM(\"205401\", 32100001, \"错误的手机号码\"),\n\n        ERROR_TEMPLATE_ID(\"205402\", 32100002, \"错误的模版id\"),\n\n        NET_ERROR(\"205403\", 32100003, \"网络错误\"),\n\n        EXCEED_LIMIT(\"205405\", 32100004, \"号码异常/同一号码发送次数过于频繁\"),\n\n        ERROR_KEY(\"10001\", 32100005, \"错误的请求KEY\"),\n\n        PERMISSION_DEFINED_KEY(\"10002\", 32100005, \"该KEY无请求权限\"),\n\n        SUCCESS(\"0\", 0, \"成功\"),\n\n        UNKNOWN(\"-1\", -1, \"位置错误\");\n\n        private String code;\n\n        private Integer pcCode;\n\n        private String message;\n\n        ErrorCodes(String code, Integer pcCode, String message) {\n            this.code = code;\n            this.pcCode = pcCode;\n            this.message = message;\n        }\n\n        private static ErrorCodes find(String code) {\n            for (ErrorCodes errorCode : ErrorCodes.values()) {\n                if (errorCode.code.equals(code)) {\n                    return errorCode;\n                }\n            }\n            return UNKNOWN;\n        }\n\n        public String getCode() {\n            return code;\n        }\n\n        public Integer getPcCode() {\n            return pcCode;\n        }\n\n        public String getMessage() {\n            return message;\n        }\n    }\n}",
  "type": 1
}
